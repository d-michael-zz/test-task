<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="1" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="sample_task_dbConnectionString" IsAppSettingsProperty="true" Modifier="Assembly" Name="sample_task_dbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DAL.Properties.Settings.GlobalReference.Default.sample_task_dbConnectionString" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="sample_task_dbConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="sample_task_dbConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DAL.Properties.Settings.GlobalReference.Default.sample_task_dbConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="booksTableAdapter" GeneratorDataComponentClassName="booksTableAdapter" Name="books" UserDataComponentName="booksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="sample_task_dbConnectionString1 (Settings)" DbObjectName="dbo.books" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT *
FROM books</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="book_id" DataSetColumn="book_id" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
              <Mapping SourceColumn="BooksLeft" DataSetColumn="BooksLeft" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="authorsTableAdapter" GeneratorDataComponentClassName="authorsTableAdapter" Name="authors" UserDataComponentName="authorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="sample_task_dbConnectionString1 (Settings)" DbObjectName="dbo.authors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [authors] WHERE (([author_id] = @Original_author_id) AND ([AuthorName] = @Original_AuthorName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_author_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="author_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AuthorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AuthorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [authors] ([author_id], [AuthorName]) VALUES (@author_id, @AuthorName);
SELECT author_id, AuthorName FROM authors WHERE (author_id = @author_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@author_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="author_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AuthorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AuthorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT *
FROM authors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [authors] SET [author_id] = @author_id, [AuthorName] = @AuthorName WHERE (([author_id] = @Original_author_id) AND ([AuthorName] = @Original_AuthorName));
SELECT author_id, AuthorName FROM authors WHERE (author_id = @author_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@author_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="author_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AuthorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AuthorName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_author_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="author_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AuthorName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AuthorName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="author_id" DataSetColumn="author_id" />
              <Mapping SourceColumn="AuthorName" DataSetColumn="AuthorName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="books_authorsTableAdapter" GeneratorDataComponentClassName="books_authorsTableAdapter" Name="books_authors" UserDataComponentName="books_authorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="sample_task_dbConnectionString1 (Settings)" DbObjectName="dbo.books_authors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [books_authors] WHERE (([book_id] = @Original_book_id) AND ([author_id] = @Original_author_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_book_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="book_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_author_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="author_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [books_authors] ([book_id], [author_id]) VALUES (@book_id, @author_id);
SELECT book_id, author_id FROM books_authors WHERE (author_id = @author_id) AND (book_id = @book_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@book_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="book_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@author_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="author_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT *
FROM books_authors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [books_authors] SET [book_id] = @book_id, [author_id] = @author_id WHERE (([book_id] = @Original_book_id) AND ([author_id] = @Original_author_id));
SELECT book_id, author_id FROM books_authors WHERE (author_id = @author_id) AND (book_id = @book_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@book_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="book_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@author_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="author_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_book_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="book_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_author_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="author_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="book_id" DataSetColumn="book_id" />
              <Mapping SourceColumn="author_id" DataSetColumn="author_id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="usersTableAdapter" GeneratorDataComponentClassName="usersTableAdapter" Name="users" UserDataComponentName="usersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="sample_task_dbConnectionString1 (Settings)" DbObjectName="dbo.users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [users] WHERE (([user_id] = @Original_user_id) AND ([email] = @Original_email) AND ([password] = @Original_password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_user_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="user_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO users
                         (email, password)
VALUES        (@email,@password); 
SELECT user_id, email, password FROM users WHERE (user_id = @user_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="email" ColumnName="email" DataSourceName="[C:\TESTFOLDER\SAMPLE_TASK_DB.MDF].dbo.users" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="password" ColumnName="password" DataSourceName="[C:\TESTFOLDER\SAMPLE_TASK_DB.MDF].dbo.users" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="user_id" ColumnName="user_id" DataSourceName="[C:\TESTFOLDER\SAMPLE_TASK_DB.MDF].dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@user_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="user_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT *
FROM users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [users] SET [user_id] = @user_id, [email] = @email, [password] = @password WHERE (([user_id] = @Original_user_id) AND ([email] = @Original_email) AND ([password] = @Original_password));
SELECT user_id, email, password FROM users WHERE (user_id = @user_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@user_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="user_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_user_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="user_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_email" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="user_id" DataSetColumn="user_id" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="books_historyTableAdapter" GeneratorDataComponentClassName="books_historyTableAdapter" Name="books_history" UserDataComponentName="books_historyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="sample_task_dbConnectionString1 (Settings)" DbObjectName="dbo.books_history" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [books_history] WHERE (([book_id] = @Original_book_id) AND ([entry_id] = @Original_entry_id) AND ([taken_by] = @Original_taken_by) AND ([date_from] = @Original_date_from) AND ([is_returned] = @Original_is_returned))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_book_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="book_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_entry_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="entry_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_taken_by" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="taken_by" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date_from" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date_from" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_is_returned" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="is_returned" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [books_history] ([book_id], [taken_by], [date_from], [is_returned]) VALUES (@book_id, @taken_by, @date_from, @is_returned);
SELECT book_id, entry_id, taken_by, date_from, is_returned FROM books_history WHERE (entry_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@book_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="book_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@taken_by" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="taken_by" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date_from" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date_from" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@is_returned" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="is_returned" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT * FROM books_history</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [books_history] SET [book_id] = @book_id, [taken_by] = @taken_by, [date_from] = @date_from, [is_returned] = @is_returned WHERE (([book_id] = @Original_book_id) AND ([entry_id] = @Original_entry_id) AND ([taken_by] = @Original_taken_by) AND ([date_from] = @Original_date_from) AND ([is_returned] = @Original_is_returned));
SELECT book_id, entry_id, taken_by, date_from, is_returned FROM books_history WHERE (entry_id = @entry_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@book_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="book_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@taken_by" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="taken_by" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@date_from" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date_from" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@is_returned" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="is_returned" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_book_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="book_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_entry_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="entry_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_taken_by" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="taken_by" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_date_from" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="date_from" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_is_returned" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="is_returned" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="entry_id" ColumnName="entry_id" DataSourceName="[C:\TESTFOLDER\SAMPLE_TASK_DB.MDF].dbo.books_history" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@entry_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="entry_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="book_id" DataSetColumn="book_id" />
              <Mapping SourceColumn="entry_id" DataSetColumn="entry_id" />
              <Mapping SourceColumn="taken_by" DataSetColumn="taken_by" />
              <Mapping SourceColumn="date_from" DataSetColumn="date_from" />
              <Mapping SourceColumn="is_returned" DataSetColumn="is_returned" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="gridTableAdapter" GeneratorDataComponentClassName="gridTableAdapter" Name="grid" UserDataComponentName="gridTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="sample_task_dbConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT b.title,  a.AuthorName, b.BooksLeft
FROM books as b
INNER JOIN books_authors as c
    ON b.book_id = c.book_id
INNER JOIN authors as a
    ON c.author_id= a.author_id
</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="title" DataSetColumn="title" />
              <Mapping SourceColumn="AuthorName" DataSetColumn="AuthorName" />
              <Mapping SourceColumn="BooksLeft" DataSetColumn="BooksLeft" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="sample_task_dbConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByUsername" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByUsername" GeneratorSourceName="FillByUsername" GetMethodModifier="Public" GetMethodName="GetDataByUsername" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByUsername" UserSourceName="FillByUsername">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT d.entry_id, b.title, a.AuthorName, b.BooksLeft, d.taken_by, d.date_from
FROM books_history as d
INNER JOIN books as b
   ON d.book_id = b.book_id
INNER JOIN books_authors as c
    ON b.book_id = c.book_id
INNER JOIN authors as a
    ON c.author_id= a.author_id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="remindersTableAdapter" GeneratorDataComponentClassName="remindersTableAdapter" Name="reminders" UserDataComponentName="remindersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="sample_task_dbConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT a.taken_by, b.Title, a.date_from
FROM books_history as a
INNER JOIN books as b
    ON a.book_id = b.book_id
WHERE a.is_returned = 0</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="taken_by" DataSetColumn="taken_by" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
              <Mapping SourceColumn="date_from" DataSetColumn="date_from" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1" msprop:Generator_UserDSName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="books" msprop:Generator_TableClassName="booksDataTable" msprop:Generator_TableVarName="tablebooks" msprop:Generator_RowChangedName="booksRowChanged" msprop:Generator_TablePropName="books" msprop:Generator_RowDeletingName="booksRowDeleting" msprop:Generator_RowChangingName="booksRowChanging" msprop:Generator_RowEvHandlerName="booksRowChangeEventHandler" msprop:Generator_RowDeletedName="booksRowDeleted" msprop:Generator_RowClassName="booksRow" msprop:Generator_UserTableName="books" msprop:Generator_RowEvArgName="booksRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="book_id" msprop:Generator_ColumnVarNameInTable="columnbook_id" msprop:Generator_ColumnPropNameInRow="book_id" msprop:Generator_ColumnPropNameInTable="book_idColumn" msprop:Generator_UserColumnName="book_id" type="xs:int" />
              <xs:element name="Title" msprop:Generator_ColumnVarNameInTable="columnTitle" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_UserColumnName="Title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BooksLeft" msprop:Generator_ColumnVarNameInTable="columnBooksLeft" msprop:Generator_ColumnPropNameInRow="BooksLeft" msprop:Generator_ColumnPropNameInTable="BooksLeftColumn" msprop:Generator_UserColumnName="BooksLeft" type="xs:unsignedByte" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="authors" msprop:Generator_TableClassName="authorsDataTable" msprop:Generator_TableVarName="tableauthors" msprop:Generator_RowChangedName="authorsRowChanged" msprop:Generator_TablePropName="authors" msprop:Generator_RowDeletingName="authorsRowDeleting" msprop:Generator_RowChangingName="authorsRowChanging" msprop:Generator_RowEvHandlerName="authorsRowChangeEventHandler" msprop:Generator_RowDeletedName="authorsRowDeleted" msprop:Generator_RowClassName="authorsRow" msprop:Generator_UserTableName="authors" msprop:Generator_RowEvArgName="authorsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="author_id" msprop:Generator_ColumnVarNameInTable="columnauthor_id" msprop:Generator_ColumnPropNameInRow="author_id" msprop:Generator_ColumnPropNameInTable="author_idColumn" msprop:Generator_UserColumnName="author_id" type="xs:int" />
              <xs:element name="AuthorName" msprop:Generator_ColumnVarNameInTable="columnAuthorName" msprop:Generator_ColumnPropNameInRow="AuthorName" msprop:Generator_ColumnPropNameInTable="AuthorNameColumn" msprop:Generator_UserColumnName="AuthorName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="books_authors" msprop:Generator_TableClassName="books_authorsDataTable" msprop:Generator_TableVarName="tablebooks_authors" msprop:Generator_RowChangedName="books_authorsRowChanged" msprop:Generator_TablePropName="books_authors" msprop:Generator_RowDeletingName="books_authorsRowDeleting" msprop:Generator_RowChangingName="books_authorsRowChanging" msprop:Generator_RowEvHandlerName="books_authorsRowChangeEventHandler" msprop:Generator_RowDeletedName="books_authorsRowDeleted" msprop:Generator_RowClassName="books_authorsRow" msprop:Generator_UserTableName="books_authors" msprop:Generator_RowEvArgName="books_authorsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="book_id" msprop:Generator_ColumnVarNameInTable="columnbook_id" msprop:Generator_ColumnPropNameInRow="book_id" msprop:Generator_ColumnPropNameInTable="book_idColumn" msprop:Generator_UserColumnName="book_id" type="xs:int" />
              <xs:element name="author_id" msprop:Generator_ColumnVarNameInTable="columnauthor_id" msprop:Generator_ColumnPropNameInRow="author_id" msprop:Generator_ColumnPropNameInTable="author_idColumn" msprop:Generator_UserColumnName="author_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="users" msprop:Generator_TableClassName="usersDataTable" msprop:Generator_TableVarName="tableusers" msprop:Generator_RowChangedName="usersRowChanged" msprop:Generator_TablePropName="users" msprop:Generator_RowDeletingName="usersRowDeleting" msprop:Generator_RowChangingName="usersRowChanging" msprop:Generator_RowEvHandlerName="usersRowChangeEventHandler" msprop:Generator_RowDeletedName="usersRowDeleted" msprop:Generator_RowClassName="usersRow" msprop:Generator_UserTableName="users" msprop:Generator_RowEvArgName="usersRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="user_id" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnuser_id" msprop:Generator_ColumnPropNameInRow="user_id" msprop:Generator_ColumnPropNameInTable="user_idColumn" msprop:Generator_UserColumnName="user_id" type="xs:int" />
              <xs:element name="email" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_UserColumnName="email">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="books_history" msprop:Generator_TableClassName="books_historyDataTable" msprop:Generator_TableVarName="tablebooks_history" msprop:Generator_RowChangedName="books_historyRowChanged" msprop:Generator_TablePropName="books_history" msprop:Generator_RowDeletingName="books_historyRowDeleting" msprop:Generator_RowChangingName="books_historyRowChanging" msprop:Generator_RowEvHandlerName="books_historyRowChangeEventHandler" msprop:Generator_RowDeletedName="books_historyRowDeleted" msprop:Generator_RowClassName="books_historyRow" msprop:Generator_UserTableName="books_history" msprop:Generator_RowEvArgName="books_historyRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="book_id" msprop:Generator_ColumnVarNameInTable="columnbook_id" msprop:Generator_ColumnPropNameInRow="book_id" msprop:Generator_ColumnPropNameInTable="book_idColumn" msprop:Generator_UserColumnName="book_id" type="xs:int" />
              <xs:element name="entry_id" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnentry_id" msprop:Generator_ColumnPropNameInRow="entry_id" msprop:Generator_ColumnPropNameInTable="entry_idColumn" msprop:Generator_UserColumnName="entry_id" type="xs:int" />
              <xs:element name="taken_by" msprop:Generator_ColumnVarNameInTable="columntaken_by" msprop:Generator_ColumnPropNameInRow="taken_by" msprop:Generator_ColumnPropNameInTable="taken_byColumn" msprop:Generator_UserColumnName="taken_by">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="date_from" msprop:Generator_ColumnVarNameInTable="columndate_from" msprop:Generator_ColumnPropNameInRow="date_from" msprop:Generator_ColumnPropNameInTable="date_fromColumn" msprop:Generator_UserColumnName="date_from" type="xs:dateTime" />
              <xs:element name="is_returned" msprop:Generator_ColumnVarNameInTable="columnis_returned" msprop:Generator_ColumnPropNameInRow="is_returned" msprop:Generator_ColumnPropNameInTable="is_returnedColumn" msprop:Generator_UserColumnName="is_returned" type="xs:unsignedByte" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="grid" msprop:Generator_TableClassName="gridDataTable" msprop:Generator_TableVarName="tablegrid" msprop:Generator_TablePropName="grid" msprop:Generator_RowDeletingName="gridRowDeleting" msprop:Generator_RowChangingName="gridRowChanging" msprop:Generator_RowEvHandlerName="gridRowChangeEventHandler" msprop:Generator_RowDeletedName="gridRowDeleted" msprop:Generator_UserTableName="grid" msprop:Generator_RowChangedName="gridRowChanged" msprop:Generator_RowEvArgName="gridRowChangeEvent" msprop:Generator_RowClassName="gridRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="title" msprop:Generator_ColumnVarNameInTable="columntitle" msprop:Generator_ColumnPropNameInRow="title" msprop:Generator_ColumnPropNameInTable="titleColumn" msprop:Generator_UserColumnName="title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AuthorName" msprop:Generator_ColumnVarNameInTable="columnAuthorName" msprop:Generator_ColumnPropNameInRow="AuthorName" msprop:Generator_ColumnPropNameInTable="AuthorNameColumn" msprop:Generator_UserColumnName="AuthorName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BooksLeft" msprop:Generator_ColumnVarNameInTable="columnBooksLeft" msprop:Generator_ColumnPropNameInRow="BooksLeft" msprop:Generator_ColumnPropNameInTable="BooksLeftColumn" msprop:Generator_UserColumnName="BooksLeft" type="xs:unsignedByte" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="reminders" msprop:Generator_TableClassName="remindersDataTable" msprop:Generator_TableVarName="tablereminders" msprop:Generator_TablePropName="reminders" msprop:Generator_RowDeletingName="remindersRowDeleting" msprop:Generator_RowChangingName="remindersRowChanging" msprop:Generator_RowEvHandlerName="remindersRowChangeEventHandler" msprop:Generator_RowDeletedName="remindersRowDeleted" msprop:Generator_UserTableName="reminders" msprop:Generator_RowChangedName="remindersRowChanged" msprop:Generator_RowEvArgName="remindersRowChangeEvent" msprop:Generator_RowClassName="remindersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="taken_by" msprop:Generator_ColumnVarNameInTable="columntaken_by" msprop:Generator_ColumnPropNameInRow="taken_by" msprop:Generator_ColumnPropNameInTable="taken_byColumn" msprop:Generator_UserColumnName="taken_by">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Title" msprop:Generator_ColumnVarNameInTable="columnTitle" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_UserColumnName="Title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="date_from" msprop:Generator_ColumnVarNameInTable="columndate_from" msprop:Generator_ColumnPropNameInRow="date_from" msprop:Generator_ColumnPropNameInTable="date_fromColumn" msprop:Generator_UserColumnName="date_from" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:books" />
      <xs:field xpath="mstns:book_id" />
    </xs:unique>
    <xs:unique name="authors_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:authors" />
      <xs:field xpath="mstns:author_id" />
    </xs:unique>
    <xs:unique name="books_authors_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:books_authors" />
      <xs:field xpath="mstns:book_id" />
      <xs:field xpath="mstns:author_id" />
    </xs:unique>
    <xs:unique name="users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:users" />
      <xs:field xpath="mstns:user_id" />
    </xs:unique>
    <xs:unique name="books_history_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:books_history" />
      <xs:field xpath="mstns:entry_id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_books_authors_authors" msdata:parent="authors" msdata:child="books_authors" msdata:parentkey="author_id" msdata:childkey="book_id" msprop:Generator_UserChildTable="books_authors" msprop:Generator_ChildPropName="Getbooks_authorsRows" msprop:Generator_UserRelationName="FK_books_authors_authors" msprop:Generator_RelationVarName="relationFK_books_authors_authors" msprop:Generator_UserParentTable="authors" msprop:Generator_ParentPropName="authorsRow" />
      <msdata:Relationship name="FK_books_authors_books" msdata:parent="books" msdata:child="books_authors" msdata:parentkey="book_id" msdata:childkey="book_id" msprop:Generator_UserChildTable="books_authors" msprop:Generator_ChildPropName="Getbooks_authorsRows" msprop:Generator_UserRelationName="FK_books_authors_books" msprop:Generator_RelationVarName="relationFK_books_authors_books" msprop:Generator_UserParentTable="books" msprop:Generator_ParentPropName="booksRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>